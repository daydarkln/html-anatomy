export default {
  tag: {
    title: 'Это тег',
    subtitle: `Теги - основные строительные блоки
      каждой страницы на сайте. Некоторые из них можно вкладывать в другие (Парные, в одиночные нельзя).
      Например, эта страница содержит пару десятков тегов с разным уровнем
      вложенности. Для каждого из элементов, на который вы наводите, отведен
      отдельный тег`,
  },
  opening: {
    title: 'Это открывающий тег',
    subtitle: `Есть два типа тегов. Одни позволяют вкладывать
      в себя другие теги, а другие - нет. Конкретно этот позволяет. `,
  },
  'no-closing': {
    title: 'У этого тега нет закрывающей части',
    subtitle: `Сверху находится тег, в который можно положить тот,
      на который вы кликнули. А вот наоборот сделать нельзя.`,
  },
  'left-bracket': {
    title: 'Это левая скобка',
    subtitle: `Угловые скобки дают понять браузеру,
      что перед нами тег. Все, что не содержит в начале такой скобки,
      будет восприниматься как <b style="color: rgb(52,52,200);">обычный текст</b>
    `,
  },
  'tag-name': {
    title: 'Это название тега',
    subtitle: `Каждый тег имеет свое название. Существует
      список доступный тегов, все их можо выучить, но
      не нужно. Есть основные и они будут представлены дальше
      в ходе изучения курса`,
  },
  'tag-property': {
    title: 'Это свойство тега',
    subtitle: `Каждый тег можно наделять свойствами.
      Если вы играли хоть раз в RPG-игры, то вы понимаете,
      о чем речь. Если не играли, то пройдите Скайрим
      или Diablo. Свойств у тега существует много, но опять-таки все сразу
      знать не обязательно. Конкретно это свойство используется в 99% случаев`,
  },
  'tag-property-value': {
    title: 'Это значение свойства тега',
    subtitle: `Если у нас есть свойство, то мы должны знать, чему оно равно.
      Здесь как раз-таки и присваивается значение конкретному свойству`,
  },
  'propperty-value-initialization': {
    title: 'Это операция присваивания',
    subtitle: `Между свойством и его значением обязательно ставится
      знак равенства, который в данном контексте обозначает не "свойство <b style="color: tomato">равно</b> значению",
      а "свойству <b style="color: rgb(52, 200, 52)">присваивается</b> значение". В этом есть разница, но какая - я вам говорить не буду`,
  },
  'right-bracket': {
    title: 'Это правая скобка',
    subtitle: `У тега может быть 1-2 таких скобок. Зависит это от того, одиночный он или парный соответственно.
      Если тег <b style="color: rgb(52, 52, 200)">одиночный</b>, то единственная скобка означает закрытие тега и что можно переходить к следующему.
      Если тег <b style="color: rgb(52, 52, 200)">парный</b>, то первая такая скобка скажет браузеру, что дальше будет содержание тега, а вторая скобка скажет
      то, что сказала единственная скобка одиночного тега`,
  },
  content: {
    title: 'Это содержимое тега',
    subtitle: `Парные теги могут содержать <b style="color: rgb(52, 52, 200)">другие теги</b>,
    либо <b style="color: rgb(52, 52, 200)">текст</b>.
      Тут вот например текст, но мы можем заменить его на другой тег`,
  },
  closing: {
    title: 'Это закрывающий тег',
    subtitle: `Он есть только у парных тегов. Все парные теги
      нужно закрывать, иначе это приведет к плачевным результатам`,
  },
  slash: {
    title: 'Это символ, обозначающий закрытый тег',
    subtitle: `Этот символ дает понять, что тег закрывается. Если его забыть,
      браузер подумает, что это начало нового тега. А это не так: начнут появляться ошибки,
      а ошибки - это плохо`,
  },
  space: {
    title: 'Это пробел',
    subtitle: `Пробелы ставятся:
    <ul>
      <li>Между названием тега и его свойством</li>
      <li>Между свойствами тега</li>
      <li>В одиночных тегах после перечисления всех свойств</li>
    </ul>
    Несоблюдение этих правил (или если вы вдруг захотите поставить
      пробел туда, где его не нужно ставить) приведет к <b style="color: tomato;">ошибке</b>.`
  }
}